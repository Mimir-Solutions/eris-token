{
  "id": "89bfebcf-07b1-45a5-8d70-f0148c4032f8",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.4",
  "solcLongVersion": "0.7.4+commit.3f05b770",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/dependencies/holyzeppelin/contracts/wip/libraries/security/events/AuthorizationDatastoreEvents.sol": {
        "content": "// // SPDX-License-Identifier: AGPL-3.0-or-later\r\n// pragma solidity 0.7.4;\r\n\r\n// library AuthorizationDatastoreEvents {\r\n\r\n//     /**\r\n//      * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n//      *\r\n//      * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n//      * {RoleAdminChanged} not being emitted signaling this.\r\n//      *\r\n//      * _Available since v3.1._\r\n//      */\r\n//     event RoleAdminChanged( address indexed _contract, address submitter, bytes32 indexed role, bytes32 previousAdminRole, bytes32 indexed newAdminRole );\r\n\r\n//     /**\r\n//      * @dev Emitted when `account` is granted `role`.\r\n//      *\r\n//      * `sender` is the account that originated the contract call, an admin role\r\n//      * bearer except when using {_setupRole}.\r\n//      */\r\n//     event RoleGranted( address indexed _contract, bytes32 indexed role, address grantee, address indexed grantor );\r\n\r\n//     /**\r\n//      * @dev Emitted when `account` is revoked `role`.\r\n//      *\r\n//      * `sender` is the account that originated the contract call:\r\n//      *   - if using `revokeRole`, it is the admin role bearer\r\n//      *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n//      */\r\n//     event RoleRevoked( address indexed _contract, bytes32 indexed role, address indexed account, address sender );\r\n\r\n//     event RoleRemoved( address indexed _contract, bytes32 indexed role, address indexed account, address sender );\r\n\r\n//     event RoleApproverChanged( address indexed _contract, address submitter, bytes32 indexed role, bytes32 approverRole, bytes32 indexed newApproverRole );\r\n\r\n//     event RestrictedSharedRoleAdded( address indexed _contract, bytes32 indexed role, bytes32 indexed restrictedSharedRole );\r\n\r\n//     event NewContractRegistered( address indexed newRegisteredContract, bytes32 indexed rootRole, address indexed rootAdminAddress );\r\n\r\n//     event CreatedRole( address indexed _contract, address indexed submitter, bytes32 role );\r\n// }"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "3420",
        "formattedMessage": "contracts/dependencies/holyzeppelin/contracts/wip/libraries/security/events/AuthorizationDatastoreEvents.sol: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.7.4;\"\n",
        "message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.7.4;\"",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/dependencies/holyzeppelin/contracts/wip/libraries/security/events/AuthorizationDatastoreEvents.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "contracts/dependencies/holyzeppelin/contracts/wip/libraries/security/events/AuthorizationDatastoreEvents.sol": {
        "ast": {
          "absolutePath": "contracts/dependencies/holyzeppelin/contracts/wip/libraries/security/events/AuthorizationDatastoreEvents.sol",
          "exportedSymbols": {},
          "id": 1,
          "license": "AGPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [],
          "src": "2048:0:0"
        },
        "id": 0
      }
    }
  }
}
